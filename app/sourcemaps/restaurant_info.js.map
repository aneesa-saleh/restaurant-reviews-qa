{"version":3,"sources":["restaurant_info.js","addReviewModal.js"],"names":["restaurant","reviews","outboxReviews","newMap","matchesMediaQuery","mediaQuery","Object","create","document","previouslyConnected","event","navigator","onLine","window","addEventListener","matchMedia","matches","updateRestaurantContainerAria","caches","serviceWorker","_event$data","data","type","requestId","review","error","enqueueToast","bind","Ã¸","concat","requestAnimationFrame","updateReviewHTML","showConnectionStatus","fetchRestaurantFromURL","console","fillBreadcrumb","initMap","DBHelper","mapMarkerForRestaurant","self","id","L","map","center","latlng","lat","lng","zoom","scrollWheelZoom","tileLayer","mapboxToken","attribution","MAPBOX_API_KEY","addTo","nextMatchesMediaQuery","previouslyFocusedElement","restaurantContainer","getElementById","accessibleRestaurantContainer","setAttribute","classList","add","callback","showErrorLoadingRestaurant","fetchRestaurantById","fillRestaurantHTML","arguments","length","undefined","innerHTML","address","picture","sourceLarge","createElement","media","srcset","imageUrlForRestaurant","size","wide","appendChild","sourceMedium","sourceSmall","name","image","alt","cuisine_type","addReviewButton","className","removeAttribute","fillRestaurantHoursHTML","cuisine","call","fillMarkAsFavouriteHTML","operatingHours","operating_hours","prototype","hasOwnProperty","key","day","time","row","hours","icon","button","querySelector","remove","isFavourite","is_favorite","stringToBoolean","markRestaurantAsFavourite","favouriteButton","unmarkRestaurantAsFavourite","fetchReviews","fetchReviewsByRestaurantId","getOutboxReviews","fillSendingReviewsHTML","container","noReviews","fillReviewsHTML","ul","insertBefore","createReviewHTML","firstChild","forEach","outboxReview","request_id","_objectWithoutProperties","sending","headerSpan","date","loadingText","dateText","formatDate","Date","updatedAt","article","rating","comments","contentSpan","reviewElement","breadcrumb","errorText","getUrlParam","url","location","href","results","exec","decodeURIComponent","replace","setMarkAsFavouriteFetchingState","spinner","removeMarkAsFavouriteFetchingState","failedUpdateCallback","successMessage","newIsFavourite","restaurantId","errorMessage","updatedRestaurant","toggleRestaurantAsFavourite","openModal","activeElement","overlay","interactiveElements","querySelectorAll","body","trapTabKey","setTimeout","focus","closeModal","clearFormErrors","removeEventListener","firstElement","lastElement","shiftKey","target","preventDefault","setNameInputError","nameInput","nameInputError","clearNameInputError","setRatingInputError","ratingInput","ratingInputError","clearRatingInputError","setCommentInputError","commentInput","commentInputError","clearCommentInputError","errorFunctions","setError","clearError","validateInput","value","inputValue","input","cloneNode","Number","parseInt","validateAllInputs","invalidInputs","push","handleRangeChange","handleInputKeyUp","handleInputBlur","getFormInputValues","values","clearForm","handleAddReviewSubmit","_validateAllInputs","formError","join","_getFormInputValues","controller","now","newReview","restaurant_id","postMessage","submitButton","addReview","log","handleFormSubmit"],"mappings":"mdAAA,IAAIA,WACAC,QACAC,cACAC,OAHAH,oBAIAI,mBAAoB,EAClBC,WAAa,qBAFfF,EAAJG,OAAAC,OAAA,MAGAC,SAAIC,iBACJ,mBAAA,SAAAC,GACAD,oBAAAE,UAAAC,OACOC,OAAGP,aAGVE,kBAASM,OAAiBC,WAAAV,YAAoBW,SAG5CC,gCACEb,wBAMES,OAAOK,QAHXD,YAAAA,sBAAiC,KAO7BN,UAAUQ,eAJdR,UAAWO,cAAQJ,iBAAA,UAAA,SAAAJ,GAAA,IAAAU,EAQXV,EAAMW,KANbC,EAFkBF,EAElBE,KAAAC,EAFkBH,EAElBG,UAAAC,EAFkBJ,EAElBI,OAAAC,EAFkBL,EAElBK,MAEaN,kBAAVR,IACFA,GAA+De,aAAA,iDAAA,SAE3DJ,sBAAAA,iBAF2DK,KAAAC,GAAA,EAAAL,MAE1CC,aAF0C,GAAAK,OAAAL,EAE1CA,KAF0C,4BAAA,WAElCC,sBAAAA,iBAFkCE,KAAAC,GAAA,EAAAL,EAAAC,QAQ1D,WAAMb,YACLe,OAAAA,iBAAY,SAAIF,sBAChBM,OAAAA,iBAAAA,UAAsBC,sBACvBD,sBAAAE,uBAGNC,uBAAA,SAAAR,EAAAzB,GASKyB,EAPFS,QAAAT,MAAYd,IAEdE,sBAAwBsB,eAAWH,KAAAA,EAAAA,IACnCF,sBAAsBE,mBAAtBL,KAAAC,EAAA5B,IACD8B,sBAAAM,SASGN,sBAAsBO,SAASC,uBAAuBX,KAAKC,EAAGW,KAAKvC,WAAYuC,KAAKpC,SAPxF8B,aAAAA,EAAuBO,SAOnBV,IAAAA,QAAAA,WAEDS,KAAApC,OAAAsC,EAAAC,IAAA,MAAA,CATHC,OAAA,CAAA3C,WAAA4C,OAAAC,IAAA7C,WAAA4C,OAAAE,KArCFC,KAAA,GAkDAC,iBAAA,IAUEP,EAAEQ,UAAU,oFAAqF,CAC/FC,YAhBelD,mGAQboC,QAAO,GACXe,YAAMC,0NAGJL,GAAI,mBACJC,MAAAA,SAQAR,OAAE1B,iBAAE,SAAA,WAN2F,GAO9FuC,OAAMlD,WAPT,CAPF,IAAAmD,EAAAzC,OAAAE,WAAAV,YAAAW,QAiBAsC,IAAAlD,oBAOMA,kBAAoBkD,EACpBrC,oCAAAA,ICxFFsC,yBDwFEtC,8BAA6B,WAC9B,IAAAuC,EAAAhD,SAAAiD,eAAA,wBACFC,EAAAlD,SAAAiD,eAAA,mCAPHrD,mBAUAoD,EAAAG,aAAA,cAAA,QAUID,EAA8BC,aAAa,cAAe,WAE1DH,EAAoBG,aAAa,cAAe,SAChDD,EAA8BC,aAAa,cAAe,UANtDD,2BAA6B,WAWnClD,SAASiD,eAAe,cAAcG,UAAUC,IAAI,QAVpDrD,SAAIJ,eAAmB,qBAAAwD,UAAAC,IAAA,SAIrBL,uBAAoBG,SAAAA,GACpBD,GAAAA,KAAAA,WACDI,EAAA,KAAAvB,KAAAvC,gBADC0D,CAIJ,IAAMK,EAAAA,YAAAA,MACJvD,GAAAA,EAkBE6B,SAAS2B,oBAAoBxB,EAAI,SAACf,EAAOzB,IACvCuC,KAAKvC,WAAaA,GAVpB8D,EAAS,KAAMvB,GAFbN,sBAAyB8B,kCAPpBN,CADXK,EAEWL,0BAFX,MAKA3B,sBAAAiC,+BAUIE,mBAAc,WAAd,IAAcjE,EAAd,EAAAkE,UAAAC,aAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAA3B,KAAAvC,WACSyB,SAADgC,eAAR,mBACA3B,UAAAA,EAAsBiC,KAEbC,SAAAA,eAAwB,sBAC3BK,WAAJrE,EAAAsE,QACA,IAAAC,EAAKvE,SAAYyD,eAAA,sBAEfe,EAAAhE,SAAAiE,cAAA,UACDD,EAAAE,MAAA,qBAoBLF,EAAYG,OAAStC,SAASuC,sBAAsB5E,EAAY,CAAE6E,KAAM,QAASC,MAAM,IAnBnFhB,EAAQxC,KAAOtB,aAChBuE,EAPDQ,YAAAP,GAXJ,IAAAQ,EAAAxE,SAAAiE,cAAA,UAsBAO,EAAAN,MAAA,qBAoBEM,EAAaL,OAAStC,SAASuC,sBAAsB5E,EAAY,CAAE6E,KAAM,WACzEG,EAAa1D,KAAO,aACpBiD,EAAQQ,YAAYC,GAnBtB,IAAMf,EAAkBzD,SAAGiE,cAArBR,UAAuDgB,EAAjCjF,OAAiCqC,SAAAuC,sBAAA5E,EAAA,CAAA6E,KAAA,UAC3DI,EAAazE,KAAQ,aACrB0E,EAAKb,YAAYrE,GAGjBsE,IAAAA,EAAQD,SAAarE,cAAWsE,OAEhCa,EAAMZ,UAAU/D,iBAGhBgE,EAAAA,IAAYE,SAAQE,sBAApB5E,GACAwE,EAAAA,IAAYG,EAAStC,IAA6CwC,EAAME,YAARI,GAAhE3E,SAAAiD,eAAA,6BACmBE,aAAnB,aAAA3D,EAAAoF,KAGkB5E,SAAGA,eAASiE,sBAC9BO,UAAAA,YAAAA,OAAqBhF,EAArBqF,cACyE7E,SAAAiD,eAAA,iCAAzEY,UAAiE,YAAAxC,OAAjE7B,EAAAqF,cAEAd,IAAAA,EAAoBS,SAApBvB,eAAA,qBAEA6B,EAAiB3B,aAAYc,aAA7B,oBAAA5C,OAAA7B,EAAAkF,OACAD,EAAYN,gBAAkBC,YAA9BpE,SAAAiD,eAAA,8BACmBY,UAAnBY,kBAAAA,OAAAjF,EAAAkF,MAIAC,SAAMI,eAAY,qBAClBC,gBAAA,YAuBAhF,SAASiD,eAAe,qBAAqB+B,gBAAgB,YApB7DjB,EAAQQ,iBAERU,0BAIAC,OAAQrB,eAARsB,KAAA3F,EAAgCA,gBAEhC4F,2BA2BIH,wBAA0B,WAAsD,IAArDI,EAAqD,EAAA3B,UAAAC,aAAAC,IAAAF,UAAA,GAAAA,UAAA,GAApC3B,KAAKvC,WAAW8F,gBAhBhEtF,EAASiD,SAATA,eAAwB,oBACxBjD,IAAAA,IAASiD,KAAAA,EAkBP,GAAInD,OAAOyF,UAAUC,eAAeL,KAAKE,EAAgBI,GAAM,CAf7DjG,IAAAA,EAAW8F,SAAAA,cAAiB,MAE/BI,EAAA1F,SAAAiE,cAAA,MAiBGyB,EAAI7B,UAAY4B,EAfhB3F,EAAAA,YAAO0F,GAEV,IAAAG,EAAA3F,SAAAiE,cAAA,MA5DH0B,EAAA9B,UAAAwB,EAAAI,GA+DAG,EAAArB,YAAAoB,GAiBME,EAAMtB,YAAYqB,KAbhBC,0BAAiB5C,SAAAA,GAmBvB,IAAM6C,EAAOC,EAAOC,cAAc,KAlBlCD,EAAkBV,cAAgB,QAChCxB,UAAW0B,iCACTO,EAAA1C,UAAYpD,IAAAA,MAASiE,UAErB6B,EAAA1C,UAAYpD,OAAQ,MAACiE,YACrByB,EAAAA,aAAA,aAAA,gDAIAC,4BAAiBN,SAAcU,GAC/BH,IAAAA,EAAIrB,EAAYoB,cAAhB,KAEMpB,EAAAA,cAAN,QACDV,UAAA,+BACFiC,EAAA1C,UAAAC,IAAA,MAAA,YAhBHyC,EAAA1C,UAAA6C,OAAA,MAAA,UAkCEH,EAAK3C,aAAa,aAAc,oDAV5BiC,wBAAyB,WAA7B,IAA6Bc,EAA7B,EAAAxC,UAAAC,aAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAA3B,KAAAvC,WAAA2G,YACKhD,EAAanD,SAAciD,eAAA,qBANlCmD,gBAAAF,GAwBIG,0BAA0BC,GAd5BC,4BAAoBP,IAQtBQ,aAAA,SAAAxE,GAgBEH,SAAS4E,2BAA2BzE,EAAI,SAACf,EAAOxB,IAC9CsC,KAAKtC,QAAUA,IAbjB6B,sBAAwBtB,gBAASiD,KAAT7B,EAAwB3B,IAmB9CoC,SAAS6E,iBAAiB1E,EAAI,SAACf,EAAOvB,GAlBpC0G,EACFC,QAAAA,IAAAA,IAEAE,KAAAA,cAAAA,EACDjF,sBAAAqF,uBAAAxF,KAAAC,EAAA1B,QAUGgC,QAAQT,MAAMA,MAFhBc,gBAAetC,WAAf,IAAeA,EAAf,EAAAiE,UAAAC,aAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAA3B,KAAAtC,QAqBF,IAAKA,GAA8B,IAAnBA,EAAQkE,OAAc,CApBpC,IAAKlE,EAASO,SAAAiE,cAAA,KAGb,OAFCvC,EAAQT,UAAR,uBACA2F,UAAArC,YAAAsC,GAEFvF,IAAAA,EAAAA,SAAAA,eAAsBwF,gBACtBjF,EAAAA,QAAS6E,SAAAA,GACPK,EAAAC,aAAWC,iBAAAjG,GAAA+F,EAAAG,eAIT5F,uBAAsBqF,WAA+BjH,IAA/BiH,EAA+BjH,EAAAA,UAAAA,aAAAA,IAAAA,UAAAA,GAAAA,UAAAA,GAA/BiH,KAAuBxF,cAC9C,GAAAzB,GAAA,IAAAA,EAAAiE,OAAA,CAEJ,IAfDoD,EAAA/G,SAAAiD,eAAA,gBADFvD,EAAAyH,QAAA,SAAAC,GAAA,IAmBArG,EAAAqG,EAAAC,WAAArG,EAnBAsG,yBAmBAF,EAnBA,CAAA,eAyCIL,EAAGC,aAAaC,iBAAiBjG,GAAQ,EAAMD,GAAYgG,EAAGG,gBAlB5DD,iBAAmB,SAACtD,EAAR4D,EAAsBxG,GACpC,IAAM8F,EAAS7G,SAAGA,cAASiE,WAC3B4C,EAAAA,UAAUhD,SAEV,IAAA2D,EAAAxH,SAAAiE,cAAA,QACDuD,EAAAzC,UAAA,gBACD,IAAQL,EAAG1E,SAASiD,cAAe,KACnCxD,EAAAA,UAAgBuB,EAAA0D,KACdqC,EAAGC,UAAH,cACDQ,EAFDjD,YAAAG,GA8BA,IAAM+C,EAAOzH,SAASiE,cAAc,KAzBiC,GAAvCvE,EAAAA,CAC9B,IAAKA,EAAAA,SAAiBA,cAAciE,KAEpCmC,EAAQ1C,UAAWC,IAACJ,MAAAA,YACpBvD,IAAAA,EAAsBM,SAAAiE,cAAA,QAAkByD,EAClB3G,UAAyBqG,UADPK,EACJzG,YADI8E,GA6BtC2B,EAAKlD,YAAYmD,OA3BdV,CAFL,IAAAW,EAAAC,WAAA,IAAAC,KAAA7G,EAAA8G,YAJFL,EAAA5D,UAAA8D,EAuCEF,EAAK1C,UAAY,cACjByC,EAAWjD,YAAYkD,GACvBM,EAAQxD,YAAYiD,GA3BpB,IAAMO,EAAU/H,SAASiE,cAAc,QACvC8D,EAAQhD,UAAY,iBAGpByC,IAAAA,EAAWzC,SAAYd,cAAvB,KAEA+D,EAAMtD,UAAN,WAAArD,OAAsB4C,EAAT+D,QACbtD,EAAKb,UAAY7C,gBACjB0D,EAAKK,YAAYiD,GAGjB,IAAMP,EAAOzH,SAASiE,cAAtB,KAWEwD,OAgBFQ,EAASpE,UAAY7C,EAAOiH,SAzB5BC,EAAA3D,YAAa0D,GACXF,EAAMjC,YAAO9F,GAEbuH,IACAG,EAAAA,aAAA,UAAwB3G,GACxB0G,EAAKlD,aAAL,YAAA,QACAkD,EAAKlD,UAAYmD,IAAAA,YAGZ7D,GAGHtC,iBAAa,SAAAN,EAAjBF,EAAAC,GACAwG,IAAAA,EAAAxH,SAAAgG,cAAA,aAAA3E,OAAAN,EAAA,OACAgH,GAAAA,GAEA,GAAMG,EAAclI,CACpBkI,IAAAA,EAAYnD,EAAYiB,cAAxB,gBAEMgC,EAAAA,UAAiB,GACvBA,IAAOnE,EAAP7D,SAAAiE,cAA8BjD,KAC9BgH,EAAOjD,UAAY1B,IAAA,MAAA,2BACnB6E,IAAAA,EAAY3D,SAAZN,cAAA,QAEMgE,EAAQpE,UAAYI,iBAC1BgE,EAASpE,YAAY7C,GACrBkH,EAAAA,YAAY3D,GACZwD,EAAQxD,UAARlB,IAAoB6E,eAIlBH,GADQ5E,SAARF,eAAgClC,iBACxBoC,KAAAA,WACR4E,GAAAA,EAAA,CACDI,EAAA/E,UAAA6C,OAAA,WAwBK,IAAMwB,EAAOU,EAAcnC,cAAc,gBAtBxC+B,EAAPH,WAAA,IAAAC,KAAA7G,EAAA8G,YAjDFL,EAAA5D,UAAA8D,OAoDMpG,iBAAmBP,GAAnBO,IAOAuE,eAAezC,WAAf,IAAA7D,EAAA,EAAAkE,UAAAC,aAAAC,IAAAF,UAAA,GAAAA,UAAA,GAA0B3B,KAAAvC,WAC1B4I,EAAepI,SAAWiD,eAAe,cACzCoF,EAAAA,SAAUxE,cAAY,MACtB4D,EAAAA,UAAKlD,EAALG,KACA+C,EAAKlD,YAAY8D,IAKnBC,YAAe9I,SAAAA,EAAAA,GAAc+I,EAAAA,GAAAlI,OAAAmI,SAAAC,KAC3B/D,EAAAA,EAAIyD,QAAAA,UAAe,QACjBA,IA8BAO,EA9BAP,IAAAA,OAAAA,OAAAA,OAAwBlC,EAAxBkC,sBA8BgBQ,KAAKJ,GA5BrB,OAAAG,EACAjB,EAAK5D,GAJP+E,mBAKOF,EAAA,GAAAG,QAAA,MAAA,MADYlB,GADAC,MAKpBkB,gCAAA,SAAA/C,EAAAgD,GACFhD,EAAA5C,aAAA,YAAA,GA1BH4C,EAAA5C,aAAA,YAAA,QA6BA4F,EAAA3F,UAAAC,IAAA,SA+BM2F,mCAAqC,SAACjD,EAAQgD,GAClDhD,EAAOf,gBAAgB,YA7BzBe,EAAMpE,aAAiB,YAAjBA,SAAmDoH,EAAjCvJ,UAAiCyG,OAAA,SAGpDpC,4BAAH,WACAuE,IAoCIa,EACAC,EA/BAZ,EANJF,EAAW7D,gBAAXxC,KAAAvC,WAAA2G,aAJFgD,GAAAjD,GAAA,UAAAA,EAOAkD,EAAArH,KAAAvC,WAAAwC,GA+BQ+D,EAAS/F,SAASiD,eAAe,qBACjC8F,EAAU/I,SAASiD,eAAe,qBAtBxCoG,EANGF,GACHzE,0BAAoBqB,GACpBkD,EAAc1C,4BAGd2C,EAAqB,0CACP,sDAEd3C,4BAA0BmC,GAT5BO,EAAA5C,0BAyCI6C,EAAiB,4CA7BfJ,uDAEJ/C,gCAAAA,EAAAgD,GACAA,SAAQ3F,6BAARgG,EAAAD,EAAA,SAAAlI,EAAAqI,GAgCE,GAnCJN,mCAAAjD,EAAAgD,IAmCSO,EA1BPP,OAHIC,QAAAA,MAAAA,GACJjD,EAAuBA,QACvBA,aAAO5C,EAAP,SAiCEpB,KAAKvC,WAAa8J,EA7BhBC,aAAAA,EAA2B,cAI/B,SAAMxD,uBACAgD,UAAU/I,SAASiD,oBACzB/B,aAAI+H,sBAAsB,YA+Bd9I,UAAUC,QAAUH,qBA9BhCiB,aAAIgI,kBAAJ,SAEAjJ,oBAAoBE,UAAAC,OClbtB,SAASoJ,YACPzG,yBAA2B/C,SAASyJ,cACpC,IAAMC,EAAU1J,SAASgG,cAAc,YACjC2D,EAAsBD,EAAQE,iBAAiB,2BACrDF,EAAQtG,UAAUC,IAAI,QACtBrD,SAAS6J,KAAKzG,UAAUC,IAAI,kBAC5BrD,SAASM,iBAAiB,UAAWwJ,YAErCC,WAAW,WACTJ,EAAoB,GAAGK,SACtB,KAGL,SAASC,aACPC,kBACAlK,SAASgG,cAAc,YAAY5C,UAAU6C,OAAO,QACpDjG,SAAS6J,KAAKzG,UAAU6C,OAAO,kBAC/BjG,SAASmK,oBAAoB,UAAWL,YACpC/G,0BACFA,yBAAyBiH,QAI7B,SAASF,WAAW5J,GAClB,GAAIA,EAAMuF,KAAqB,WAAdvF,EAAMuF,IACrBwE,iBADF,CAIA,IACMN,EADU3J,SAASgG,cAAc,YACH4D,iBAAiB,iBAC/CQ,EAAeT,EAAoB,GACnCU,EAAcV,EAAoBA,EAAoBhG,OAAS,GACjEzD,EAAMuF,KAAqB,QAAdvF,EAAMuF,MACjBvF,EAAMoK,UAAYpK,EAAMqK,SAAWH,GACrClK,EAAMsK,iBACNH,EAAYL,SACF9J,EAAMoK,UAAYpK,EAAMqK,SAAWF,IAC7CnK,EAAMsK,iBACNJ,EAAaJ,WAOnB,SAASS,oBACP,IAAMC,EAAY1K,SAASiD,eAAe,QACpC0H,EAAiB3K,SAASiD,eAAe,cAC/CyH,EAAUtH,UAAUC,IAAI,aACxBqH,EAAUvH,aAAa,eAAgB,QACvCuH,EAAUvH,aAAa,mBAAoB,cAC3CwH,EAAevH,UAAUC,IAAI,QAG/B,SAASuH,sBACP,IAAMF,EAAY1K,SAASiD,eAAe,QACpC0H,EAAiB3K,SAASiD,eAAe,cAC/CyH,EAAUtH,UAAU6C,OAAO,aAC3ByE,EAAU1F,gBAAgB,gBAC1B0F,EAAU1F,gBAAgB,oBAC1B2F,EAAevH,UAAU6C,OAAO,QAGlC,SAAS4E,sBACP,IAAMC,EAAc9K,SAASiD,eAAe,UACtC8H,EAAmB/K,SAASiD,eAAe,gBACjD6H,EAAY1H,UAAUC,IAAI,aAC1ByH,EAAY3H,aAAa,eAAgB,QACzC2H,EAAY3H,aAAa,mBAAoB,gBAC7C4H,EAAiB3H,UAAUC,IAAI,QAGjC,SAAS2H,wBACP,IAAMF,EAAc9K,SAASiD,eAAe,UACtC8H,EAAmB/K,SAASiD,eAAe,gBACjD6H,EAAY1H,UAAU6C,OAAO,aAC7B6E,EAAY9F,gBAAgB,gBAC5B8F,EAAY9F,gBAAgB,oBAC5B+F,EAAiB3H,UAAU6C,OAAO,QAGpC,SAASgF,uBACP,IAAMC,EAAelL,SAASiD,eAAe,YACvCkI,EAAoBnL,SAASiD,eAAe,kBAClDiI,EAAa9H,UAAUC,IAAI,aAC3B6H,EAAa/H,aAAa,eAAgB,QAC1C+H,EAAa/H,aAAa,mBAAoB,kBAC9CgI,EAAkB/H,UAAUC,IAAI,QAGlC,SAAS+H,yBACP,IAAMF,EAAelL,SAASiD,eAAe,YACvCkI,EAAoBnL,SAASiD,eAAe,kBAClDiI,EAAa9H,UAAU6C,OAAO,aAC9BiF,EAAalG,gBAAgB,gBAC7BkG,EAAalG,gBAAgB,oBAC7BmG,EAAkB/H,UAAU6C,OAAO,QAGrC,IAAMoF,eAAiB,CACrB3G,KAAM,CACJ4G,SAAUb,kBACVc,WAAYX,qBAEd5C,OAAQ,CACNsD,SAAUT,oBACVU,WAAYP,uBAEd/C,SAAU,CACRqD,SAAUL,qBACVM,WAAYH,yBAMhB,SAASI,cAAcxJ,EAAIyJ,GACzB,IACIC,EADEC,EAAQ3L,SAASiD,eAAejB,GAAI4J,YAQ1C,OALEF,OADY9H,IAAV6H,EACWA,EAEAE,EAAMF,OAErBC,EAAoB,WAAP1J,EAAkB6J,OAAOC,SAASJ,EAAY,IAAMA,IAE/DL,eAAerJ,GAAIuJ,cACZ,IAETjK,sBAAsB+J,eAAerJ,GAAIsJ,WAClC,GAGT,SAASS,oBACP,IAAI9K,GAAQ,EAEN+K,EAAgB,GAQtB,MATiB,CAAC,OAAQ,SAAU,YAE3B7E,QAAQ,SAACnF,GACGwJ,cAAcxJ,KAE/BgK,EAAcC,KAAKjK,GACnBf,GAAQ,KAGL,CAAEA,MAAAA,EAAO+K,cAAAA,GAKlB,SAASE,kBAAkBhM,GACLF,SAASgG,cAAc,iBAC/BnC,UAAZ,GAAAxC,OAA2BnB,EAAMqK,OAAOkB,MAAxC,MACAD,cAActL,EAAMqK,OAAO7F,KAAMxE,EAAMqK,OAAOkB,OAGhD,SAASU,iBAAiBjM,GAClBA,EAAMuF,KAAqB,QAAdvF,EAAMuF,KAIvB+F,cAActL,EAAMqK,OAAO7F,KAAMxE,EAAMqK,OAAOkB,OAIlD,SAASW,gBAAgBlM,GACvBsL,cAActL,EAAMqK,OAAO7F,KAAMxE,EAAMqK,OAAOkB,OAGhD,SAASY,qBACP,IACMC,EAAS,GAIf,MALiB,CAAC,OAAQ,SAAU,YAE3BnF,QAAQ,SAACnF,GAChBsK,EAAOtK,GAAMhC,SAASiD,eAAejB,GAAIyJ,QAEpCa,EAGT,SAASC,YACPvM,SAASiD,eAAe,QAAQwI,MAAQ,GACxCzL,SAASiD,eAAe,UAAUwI,MAAQ,IAC1CzL,SAASgG,cAAc,iBAAiBnC,UAAY,MACpD7D,SAASiD,eAAe,YAAYwI,MAAQ,GAG9C,SAASvB,kBACPlK,SAASiD,eAAe,cAAcG,UAAU6C,OAAO,QACvDjG,SAASiD,eAAe,gBAAgBG,UAAU6C,OAAO,QACzDjG,SAASiD,eAAe,kBAAkBG,UAAU6C,OAAO,QAC3DjG,SAASiD,eAAe,yBAAyBG,UAAU6C,OAAO,QAClEjG,SAASiD,eAAe,yBAAyBY,UAAY,GAC7D7D,SAASiD,eAAe,QAAQG,UAAU6C,OAAO,aACjDjG,SAASiD,eAAe,UAAUG,UAAU6C,OAAO,aACnDjG,SAASiD,eAAe,YAAYG,UAAU6C,OAAO,aAGvD,SAASuG,wBAAwB,IAAAC,EACEV,oBAAzB9K,EADuBwL,EACvBxL,MAAO+K,EADgBS,EAChBT,cACf,GAAK/K,EAyCE,CACL,IAAMyL,EAAY1M,SAASiD,eAAe,yBACpCoF,EAAS,sBAAAhH,OAAyB2K,EAAcW,KAAK,OAC3DD,EAAU7I,UAAYwE,EACtBqE,EAAUtJ,UAAUC,IAAI,QACxBrD,SAASiD,eAAe+I,EAAc,IAAIhC,YA9ChC,CAAA,IAAA4C,EACyBP,qBAA3B3H,EADEkI,EACFlI,KAAMsD,EADJ4E,EACI5E,OAAQC,EADZ2E,EACY3E,SACtB,GAAM9H,UAAUQ,eAAoBR,UAAUQ,cAAckM,WAmBrD,CACL,IAAM9L,EAAS,GAAAM,OAAMU,KAAKvC,WAAWwC,GAAtB,KAAAX,OAA4BwG,KAAKiF,OAC1CC,EAAY,CAChBrI,KAAAA,EAAMsD,OAAAA,EAAQC,SAAAA,EAAU+E,cAAejL,KAAKvC,WAAWwC,IAEnD+E,EAAK/G,SAASiD,eAAe,gBACnC8D,EAAGC,aAAaC,iBAAiB8F,GAAW,EAAMhM,GAAYgG,EAAGG,YAE5D,WAAY/G,YAAeA,UAAUC,QACxCc,aAAa,0DAGf+I,aACAsC,YACApM,UAAUQ,cAAckM,WAAWI,YAAY,CAC7CnM,KAAM,cACNE,OAAQ+L,EACRhM,UAAAA,QApCqE,CAEvE,IAAMmM,EAAelN,SAASiD,eAAe,qBAC7CiK,EAAa/J,aAAa,YAAY,GACtC+J,EAAa/J,aAAa,YAAa,QACvCtB,SAASsL,UAAUpL,KAAKvC,WAAWwC,GAAI0C,EAAMsD,EAAQC,EAAU,SAAChH,EAAO8L,GAGrE,GAFAG,EAAalI,gBAAgB,YAC7BkI,EAAa/J,aAAa,YAAa,SACnClC,EACFC,aAAa,sCAAuC,SACpDQ,QAAQ0L,IAAInM,OACP,CACLC,aAAY,GAAAG,OAAIqD,EAAJ,4BAAoC,WAChD,IAAMqC,EAAK/G,SAASiD,eAAe,gBACnC8D,EAAGC,aAAaC,iBAAiB8F,GAAYhG,EAAGG,YAChD+C,aACAsC,iBAgCV,SAASc,iBAAiBnN,GACxBA,EAAMsK","file":"../js/restaurant_info.js","sourcesContent":["let restaurant;\nlet reviews;\nlet outboxReviews;\nlet newMap;\nlet matchesMediaQuery = true;\nconst mediaQuery = '(min-width: 800px)';\nlet previouslyConnected;\n// this will be used as a safe `this` for currying using func.bind\n// Fallback `this` would be window otherwise\nconst Ã¸ = Object.create(null);\n\n\ndocument.addEventListener('DOMContentLoaded', (event) => {\n  previouslyConnected = navigator.onLine;\n\n  if (window.matchMedia) {\n    matchesMediaQuery = window.matchMedia(mediaQuery).matches;\n  }\n\n  updateRestaurantContainerAria(); // set initial aria values\n  registerServiceWorker();\n\n  if (window.caches) {\n    setInterval(cleanMapboxTilesCache, 5000);\n  }\n\n  if (navigator.serviceWorker) {\n    navigator.serviceWorker.addEventListener('message', (event) => {\n      const {\n        type, requestId, review, error,\n      } = event.data;\n      if (type === 'update-review') {\n        if (error) {\n          enqueueToast('An error occurred while submitting your review', 'error');\n          requestAnimationFrame(updateReviewHTML.bind(Ã¸, true, requestId));\n        } else {\n          enqueueToast(`${review.name}'s review has been saved`, 'success');\n          requestAnimationFrame(updateReviewHTML.bind(Ã¸, false, requestId, review));\n        }\n      }\n    });\n  }\n\n  if ('onLine' in navigator) {\n    window.addEventListener('online', showConnectionStatus);\n    window.addEventListener('offline', showConnectionStatus);\n    requestAnimationFrame(showConnectionStatus);\n  }\n\n  fetchRestaurantFromURL((error, restaurant) => {\n    if (error) { // Got an error!\n      console.error(error);\n    } else {\n      requestAnimationFrame(fillBreadcrumb.bind(Ã¸, restaurant));\n      requestAnimationFrame(fillRestaurantHTML.bind(Ã¸, restaurant));\n      requestAnimationFrame(initMap);\n      requestAnimationFrame(DBHelper.mapMarkerForRestaurant.bind(Ã¸, self.restaurant, self.newMap));\n      fetchReviews(restaurant.id);\n    }\n  });\n});\n\n/**\n * Initialize leaflet map\n */\nconst initMap = () => {\n  const MAPBOX_API_KEY = 'pk.eyJ1IjoiYW5lZXNhLXNhbGVoIiwiYSI6ImNqa2xmZHVwMDFoYW4zdnAwYWplMm53bHEifQ.V11dDOtEnWSwTxY-C8mJLw';\n  self.newMap = L.map('map', {\n    center: [restaurant.latlng.lat, restaurant.latlng.lng],\n    zoom: 16,\n    scrollWheelZoom: false,\n  });\n  L.tileLayer('https://api.tiles.mapbox.com/v4/{id}/{z}/{x}/{y}.jpg70?access_token={mapboxToken}', {\n    mapboxToken: MAPBOX_API_KEY,\n    maxZoom: 18,\n    attribution: 'Map data &copy; <a href=\"https://www.openstreetmap.org/\">OpenStreetMap</a> contributors, '\n        + '<a href=\"https://creativecommons.org/licenses/by-sa/2.0/\">CC-BY-SA</a>, '\n        + 'Imagery Â© <a href=\"https://www.mapbox.com/\">Mapbox</a>',\n    id: 'mapbox.streets',\n  }).addTo(newMap);\n};\n\n/**\n* Update aria-hidden values of the visible and accessible restaurant containers\n*/\nwindow.addEventListener('resize', () => {\n  if (window.matchMedia) {\n    const nextMatchesMediaQuery = window.matchMedia(mediaQuery).matches;\n    if (nextMatchesMediaQuery !== matchesMediaQuery) { // only update aria when layout changes\n      matchesMediaQuery = nextMatchesMediaQuery;\n      updateRestaurantContainerAria();\n    }\n  }\n});\n\n/**\n* Set aria-hidden values for visible and regular restaurant containers\n* Accessible restaurant container is off screen\n* It is required to maintain screen reading order when the layout shifts\n*/\nconst updateRestaurantContainerAria = () => {\n  const restaurantContainer = document.getElementById('restaurant-container');\n  const accessibleRestaurantContainer = document.getElementById('accessible-restaurant-container');\n  if (matchesMediaQuery) { // larger layout, screen reading order off\n    restaurantContainer.setAttribute('aria-hidden', 'true');\n    accessibleRestaurantContainer.setAttribute('aria-hidden', 'false');\n  } else { // use regular reading order\n    restaurantContainer.setAttribute('aria-hidden', 'false');\n    accessibleRestaurantContainer.setAttribute('aria-hidden', 'true');\n  }\n};\n\nconst showErrorLoadingRestaurant = () => {\n  document.getElementById('main-error').classList.add('show');\n  document.getElementById('wrap-main-content').classList.add('hide');\n};\n\n/**\n * Get current restaurant from page URL.\n */\nconst fetchRestaurantFromURL = (callback) => {\n  if (self.restaurant) { // restaurant already fetched!\n    callback(null, self.restaurant);\n    return;\n  }\n  const id = getUrlParam('id');\n  if (!id) { // no id found in URL\n    const error = 'No restaurant id in URL';\n    callback(error, null);\n    requestAnimationFrame(showErrorLoadingRestaurant);\n  } else {\n    DBHelper.fetchRestaurantById(id, (error, restaurant) => {\n      self.restaurant = restaurant;\n      if (!restaurant) {\n        requestAnimationFrame(showErrorLoadingRestaurant);\n        return;\n      }\n      callback(null, restaurant);\n    });\n  }\n};\n\n/**\n * Create restaurant HTML and add it to the webpage\n */\nconst fillRestaurantHTML = (restaurant = self.restaurant) => {\n  const name = document.getElementById('restaurant-name');\n  name.innerHTML = restaurant.name;\n\n  const address = document.getElementById('restaurant-address');\n  address.innerHTML += restaurant.address;\n\n  const picture = document.getElementById('restaurant-picture');\n\n  const sourceLarge = document.createElement('source');\n  sourceLarge.media = '(min-width: 800px)';\n  sourceLarge.srcset = DBHelper.imageUrlForRestaurant(restaurant, { size: 'large', wide: true });\n  sourceLarge.type = 'image/jpeg';\n  picture.appendChild(sourceLarge);\n\n  const sourceMedium = document.createElement('source');\n  sourceMedium.media = '(min-width: 600px)';\n  sourceMedium.srcset = DBHelper.imageUrlForRestaurant(restaurant, { size: 'medium' });\n  sourceMedium.type = 'image/jpeg';\n  picture.appendChild(sourceMedium);\n\n  const sourceSmall = document.createElement('source');\n  sourceSmall.srcset = DBHelper.imageUrlForRestaurant(restaurant, { size: 'small' });\n  sourceSmall.type = 'image/jpeg';\n  picture.appendChild(sourceSmall);\n\n  const image = document.createElement('img');\n  image.className = 'restaurant-img';\n  // set default size in case picture element is not supported\n  image.src = DBHelper.imageUrlForRestaurant(restaurant);\n  image.alt = restaurant.alt;\n  picture.appendChild(image);\n\n  const accessibleRestaurantImage = document.getElementById('accessible-restaurant-img');\n  accessibleRestaurantImage.setAttribute('aria-label', restaurant.alt);\n\n  const cuisine = document.getElementById('restaurant-cuisine');\n  cuisine.innerHTML = `Cuisine: ${restaurant.cuisine_type}`;\n\n  const accessibleRestaurantCuisine = document.getElementById('accessible-restaurant-cuisine');\n  accessibleRestaurantCuisine.innerHTML = `Cuisine: ${restaurant.cuisine_type}`;\n\n  const addReviewButton = document.getElementById('add-review-button');\n  addReviewButton.setAttribute('aria-label', `Add a review for ${restaurant.name}`);\n  addReviewButton.removeAttribute('disabled');\n\n  const addReviewOverlayHeading = document.getElementById('add-review-overlay-heading');\n  addReviewOverlayHeading.innerHTML = `Add review for ${restaurant.name}`;\n\n  // enable buttons\n  document.getElementById('mark-as-favourite').removeAttribute('disabled');\n  document.getElementById('add-review-button').removeAttribute('disabled');\n\n  // fill operating hours\n  if (restaurant.operating_hours) {\n    fillRestaurantHoursHTML();\n  }\n\n  if (Object.hasOwnProperty.call(restaurant, 'is_favorite')) {\n    fillMarkAsFavouriteHTML();\n  }\n};\n\n/**\n * Create restaurant operating hours HTML table and add it to the webpage.\n */\nconst fillRestaurantHoursHTML = (operatingHours = self.restaurant.operating_hours) => {\n  const hours = document.getElementById('restaurant-hours');\n  for (const key in operatingHours) {\n    if (Object.prototype.hasOwnProperty.call(operatingHours, key)) {\n      const row = document.createElement('tr');\n\n      const day = document.createElement('td');\n      day.innerHTML = key;\n      row.appendChild(day);\n\n      const time = document.createElement('td');\n      time.innerHTML = operatingHours[key];\n      row.appendChild(time);\n\n      hours.appendChild(row);\n    }\n  }\n};\n\nconst markRestaurantAsFavourite = (button) => {\n  const icon = button.querySelector('i');\n  const text = button.querySelector('span');\n  text.innerHTML = 'Unmark restaurant as favourite';\n  icon.classList.add('fas', 'marked');\n  icon.classList.remove('far', 'unmarked');\n  icon.setAttribute('aria-label', 'Restaurant is currently marked as favourite');\n};\n\nconst unmarkRestaurantAsFavourite = (button) => {\n  const icon = button.querySelector('i');\n  const text = button.querySelector('span');\n  text.innerHTML = 'Mark restaurant as favourite';\n  icon.classList.add('far', 'unmarked');\n  icon.classList.remove('fas', 'marked');\n  icon.setAttribute('aria-label', 'Restaurant is not currently marked as favourite');\n};\n\n/**\n * Set state and text for mark as favourite button.\n */\nconst fillMarkAsFavouriteHTML = (isFavourite = self.restaurant.is_favorite) => {\n  const favouriteButton = document.getElementById('mark-as-favourite');\n  if (stringToBoolean(isFavourite)) {\n    markRestaurantAsFavourite(favouriteButton);\n  } else {\n    unmarkRestaurantAsFavourite(favouriteButton);\n  }\n};\n\n/**\n * Get current restaurant from page URL.\n */\nconst fetchReviews = (id) => {\n  DBHelper.fetchReviewsByRestaurantId(id, (error, reviews) => {\n    self.reviews = reviews;\n    if (!reviews) {\n      console.error(error);\n      return;\n    }\n    requestAnimationFrame(fillReviewsHTML.bind(Ã¸, reviews));\n    DBHelper.getOutboxReviews(id, (error, outboxReviews) => {\n      if (error) {\n        console.log(error);\n      } else {\n        self.outboxReviews = outboxReviews;\n        requestAnimationFrame(fillSendingReviewsHTML.bind(Ã¸, outboxReviews));\n      }\n    });\n  });\n};\n\n/**\n * Create all reviews HTML and add them to the webpage.\n */\nconst fillReviewsHTML = (reviews = self.reviews) => {\n  if (!reviews || reviews.length === 0) {\n    const noReviews = document.createElement('p');\n    noReviews.innerHTML = 'No reviews yet!';\n    container.appendChild(noReviews);\n    return;\n  }\n  const ul = document.getElementById('reviews-list');\n  reviews.forEach((review) => {\n    ul.insertBefore(createReviewHTML(review), ul.firstChild);\n  });\n};\n\nconst fillSendingReviewsHTML = (outboxReviews = self.outboxReviews) => {\n  if (!outboxReviews || outboxReviews.length === 0) return;\n\n  const ul = document.getElementById('reviews-list');\n  outboxReviews.forEach((outboxReview) => {\n    const { request_id: requestId, ...review } = outboxReview;\n    ul.insertBefore(createReviewHTML(review, true, requestId), ul.firstChild);\n  });\n};\n\n/**\n * Create review HTML and add it to the webpage.\n */\nconst createReviewHTML = (review, sending, requestId) => {\n  const article = document.createElement('article');\n  article.className = 'review';\n\n  const headerSpan = document.createElement('span');\n  headerSpan.className = 'review-header';\n\n  const name = document.createElement('p');\n  name.innerHTML = review.name;\n  name.className = 'review-name';\n  headerSpan.appendChild(name);\n\n  const date = document.createElement('p');\n\n  if (sending) {\n    const icon = document.createElement('i');\n    icon.classList.add('far', 'fa-clock');\n    const loadingText = document.createElement('span');\n    loadingText.innerHTML = 'Sending';\n    date.appendChild(icon);\n    date.appendChild(loadingText);\n  } else {\n    const dateText = formatDate(new Date(review.updatedAt));\n    date.innerHTML = dateText;\n  }\n\n  date.className = 'review-date';\n  headerSpan.appendChild(date);\n  article.appendChild(headerSpan);\n\n  const contentSpan = document.createElement('span');\n  contentSpan.className = 'review-content';\n\n  const rating = document.createElement('p');\n  rating.innerHTML = `Rating: ${review.rating}`;\n  rating.className = 'review-rating';\n  contentSpan.appendChild(rating);\n\n  const comments = document.createElement('p');\n  comments.innerHTML = review.comments;\n  contentSpan.appendChild(comments);\n  article.appendChild(contentSpan);\n\n  if (sending) {\n    article.setAttribute('data-id', requestId);\n    article.setAttribute('aria-busy', 'true');\n    article.classList.add('sending');\n  }\n\n  return article;\n};\n\nconst updateReviewHTML = (error, requestId, review) => {\n  const reviewElement = document.querySelector(`[data-id=\"${requestId}\"]`);\n  if (error) {\n    if (reviewElement) { // for error, no need to add to UI if it doesn't exist\n      const date = reviewElement.querySelector('.review-date');\n      date.innerHTML = '';\n      const icon = document.createElement('i');\n      icon.classList.add('fas', 'fa-exclamation-triangle');\n      const errorText = document.createElement('span');\n      errorText.innerHTML = 'Sending failed';\n      date.appendChild(icon);\n      date.appendChild(errorText);\n      date.classList.add('error');\n    }\n  } else {\n    const ul = document.getElementById('reviews-list');\n    if (ul && self.restaurant) { // only update if the restaurant is loaded\n      if (reviewElement) {\n        reviewElement.classList.remove('sending');\n        const date = reviewElement.querySelector('.review-date');\n        const dateText = formatDate(new Date(review.updatedAt));\n        date.innerHTML = dateText;\n      } else {\n        createReviewHTML(review, false);\n      }\n    }\n  }\n};\n\n/**\n * Add restaurant name to the breadcrumb navigation menu\n */\nconst fillBreadcrumb = (restaurant = self.restaurant) => {\n  const breadcrumb = document.getElementById('breadcrumb');\n  const li = document.createElement('li');\n  li.innerHTML = restaurant.name;\n  breadcrumb.appendChild(li);\n};\n\n/**\n * Get a parameter by name from page URL.\n */\nconst getUrlParam = (name, url) => {\n  url = url || window.location.href;\n  name = name.replace(/[\\[\\]]/g, '\\\\$&');\n  const regex = new RegExp(`[?&]${name}(=([^&#]*)|&|#|$)`);\n\n\n  const results = regex.exec(url);\n  if (!results) return null;\n  if (!results[2]) return '';\n  return decodeURIComponent(results[2].replace(/\\+/g, ' '));\n};\n\nconst setMarkAsFavouriteFetchingState = (button, spinner) => {\n  button.setAttribute('disabled', true);\n  button.setAttribute('aria-busy', 'true');\n  spinner.classList.add('show');\n};\n\nconst removeMarkAsFavouriteFetchingState = (button, spinner) => {\n  button.removeAttribute('disabled');\n  button.setAttribute('aria-busy', 'false');\n  spinner.classList.remove('show');\n};\n\nconst toggleRestaurantAsFavourite = () => {\n  const isFavourite = stringToBoolean(self.restaurant.is_favorite);\n  const newIsFavourite = (!isFavourite) && isFavourite !== 'false';\n  const restaurantId = self.restaurant.id;\n  const button = document.getElementById('mark-as-favourite');\n  const spinner = document.getElementById('favourite-spinner');\n  let failedUpdateCallback; // function to revert UI if failed\n  let successMessage;\n  let errorMessage;\n  if (newIsFavourite) { // user is marking the restaurant as favourite\n    markRestaurantAsFavourite(button);\n    failedUpdateCallback = unmarkRestaurantAsFavourite;\n    successMessage = 'Restaurant has been marked as favourite';\n    errorMessage = 'An error occurred marking restaurant as favourite';\n  } else { // user is unmarking the restaurant as favourite\n    unmarkRestaurantAsFavourite(button);\n    failedUpdateCallback = markRestaurantAsFavourite;\n    successMessage = 'Restaurant has been unmarked as favourite';\n    errorMessage = 'An error occurred unmarking restaurant as favourite';\n  }\n  setMarkAsFavouriteFetchingState(button, spinner);\n  DBHelper.setRestaurantFavouriteStatus(restaurantId, newIsFavourite, (error, updatedRestaurant) => {\n    removeMarkAsFavouriteFetchingState(button, spinner);\n    if (!updatedRestaurant) {\n      console.error(error);\n      failedUpdateCallback(button);\n      enqueueToast(errorMessage, 'error');\n      return;\n    }\n    self.restaurant = updatedRestaurant;\n    enqueueToast(successMessage, 'success');\n  });\n};\n\nfunction showConnectionStatus() {\n  if (navigator.onLine && !previouslyConnected) { // user came back online\n    enqueueToast('You are back online', 'success');\n  } else if (!navigator.onLine && previouslyConnected) { // user went offline\n    enqueueToast('You are offline', 'error');\n  }\n\n  previouslyConnected = navigator.onLine;\n}\n","/** **** modal ****** */\n\nlet previouslyFocusedElement;\n\nfunction openModal() {\n  previouslyFocusedElement = document.activeElement;\n  const overlay = document.querySelector('.overlay');\n  const interactiveElements = overlay.querySelectorAll('button, input, textarea');\n  overlay.classList.add('show');\n  document.body.classList.add('has-open-modal');\n  document.addEventListener('keydown', trapTabKey);\n  // focus the first element in the overlay. timeout is needed because of CSS transition\n  setTimeout(() => {\n    interactiveElements[0].focus();\n  }, 100);\n}\n\nfunction closeModal() {\n  clearFormErrors();\n  document.querySelector('.overlay').classList.remove('show');\n  document.body.classList.remove('has-open-modal');\n  document.removeEventListener('keydown', trapTabKey);\n  if (previouslyFocusedElement) {\n    previouslyFocusedElement.focus();\n  }\n}\n\nfunction trapTabKey(event) {\n  if (event.key && event.key === 'Escape') {\n    closeModal();\n    return;\n  }\n  const overlay = document.querySelector('.overlay');\n  const interactiveElements = overlay.querySelectorAll('button, input');\n  const firstElement = interactiveElements[0];\n  const lastElement = interactiveElements[interactiveElements.length - 1];\n  if (event.key && event.key === 'Tab') {\n    if (event.shiftKey && event.target === firstElement) { // shift + tab\n      event.preventDefault();\n      lastElement.focus();\n    } else if (!event.shiftKey && event.target === lastElement) { // tab\n      event.preventDefault();\n      firstElement.focus();\n    }\n  }\n}\n\n/** **** handle errors ****** */\n\nfunction setNameInputError() {\n  const nameInput = document.getElementById('name');\n  const nameInputError = document.getElementById('name-error');\n  nameInput.classList.add('has-error');\n  nameInput.setAttribute('aria-invalid', 'true');\n  nameInput.setAttribute('aria-describedby', 'name-error');\n  nameInputError.classList.add('show');\n}\n\nfunction clearNameInputError() {\n  const nameInput = document.getElementById('name');\n  const nameInputError = document.getElementById('name-error');\n  nameInput.classList.remove('has-error');\n  nameInput.removeAttribute('aria-invalid');\n  nameInput.removeAttribute('aria-describedby');\n  nameInputError.classList.remove('show');\n}\n\nfunction setRatingInputError() {\n  const ratingInput = document.getElementById('rating');\n  const ratingInputError = document.getElementById('rating-error');\n  ratingInput.classList.add('has-error');\n  ratingInput.setAttribute('aria-invalid', 'true');\n  ratingInput.setAttribute('aria-describedby', 'rating-error');\n  ratingInputError.classList.add('show');\n}\n\nfunction clearRatingInputError() {\n  const ratingInput = document.getElementById('rating');\n  const ratingInputError = document.getElementById('rating-error');\n  ratingInput.classList.remove('has-error');\n  ratingInput.removeAttribute('aria-invalid');\n  ratingInput.removeAttribute('aria-describedby');\n  ratingInputError.classList.remove('show');\n}\n\nfunction setCommentInputError() {\n  const commentInput = document.getElementById('comments');\n  const commentInputError = document.getElementById('comments-error');\n  commentInput.classList.add('has-error');\n  commentInput.setAttribute('aria-invalid', 'true');\n  commentInput.setAttribute('aria-describedby', 'comments-error');\n  commentInputError.classList.add('show');\n}\n\nfunction clearCommentInputError() {\n  const commentInput = document.getElementById('comments');\n  const commentInputError = document.getElementById('comments-error');\n  commentInput.classList.remove('has-error');\n  commentInput.removeAttribute('aria-invalid');\n  commentInput.removeAttribute('aria-describedby');\n  commentInputError.classList.remove('show');\n}\n\nconst errorFunctions = {\n  name: {\n    setError: setNameInputError,\n    clearError: clearNameInputError,\n  },\n  rating: {\n    setError: setRatingInputError,\n    clearError: clearRatingInputError,\n  },\n  comments: {\n    setError: setCommentInputError,\n    clearError: clearCommentInputError,\n  },\n};\n\n/** **** validation ****** */\n\nfunction validateInput(id, value) {\n  const input = document.getElementById(id).cloneNode();\n  let inputValue;\n  if (value !== undefined) {\n    inputValue = value;\n  } else {\n    inputValue = input.value;\n  }\n  inputValue = id === 'rating' ? Number.parseInt(inputValue, 10) : inputValue;\n  if (inputValue) {\n    errorFunctions[id].clearError();\n    return true;\n  }\n  requestAnimationFrame(errorFunctions[id].setError);\n  return false;\n}\n\nfunction validateAllInputs() {\n  let error = false;\n  const inputIds = ['name', 'rating', 'comments'];\n  const invalidInputs = [];\n  inputIds.forEach((id) => {\n    const inputValid = validateInput(id);\n    if (!inputValid) {\n      invalidInputs.push(id);\n      error = true;\n    }\n  });\n  return { error, invalidInputs };\n}\n\n/** **** handle events ****** */\n\nfunction handleRangeChange(event) {\n  const ratingValue = document.querySelector('.rating-value');\n  ratingValue.innerHTML = `${event.target.value}/5`;\n  validateInput(event.target.name, event.target.value);\n}\n\nfunction handleInputKeyUp(event) {\n  if (!(event.key && event.key === 'Tab')) {\n    // when tab is used, allow the onblur handler to perform validation\n    // when the tab key is pressed, focus is already on the next input when the event fires\n    // so the wrong input is validated\n    validateInput(event.target.name, event.target.value);\n  }\n}\n\nfunction handleInputBlur(event) {\n  validateInput(event.target.name, event.target.value);\n}\n\nfunction getFormInputValues() {\n  const inputIds = ['name', 'rating', 'comments'];\n  const values = {};\n  inputIds.forEach((id) => {\n    values[id] = document.getElementById(id).value;\n  });\n  return values;\n}\n\nfunction clearForm() {\n  document.getElementById('name').value = '';\n  document.getElementById('rating').value = '0';\n  document.querySelector('.rating-value').innerHTML = '0/5';\n  document.getElementById('comments').value = '';\n}\n\nfunction clearFormErrors() {\n  document.getElementById('name-error').classList.remove('show');\n  document.getElementById('rating-error').classList.remove('show');\n  document.getElementById('comments-error').classList.remove('show');\n  document.getElementById('add-review-form-error').classList.remove('show');\n  document.getElementById('add-review-form-error').innerHTML = '';\n  document.getElementById('name').classList.remove('has-error');\n  document.getElementById('rating').classList.remove('has-error');\n  document.getElementById('comments').classList.remove('has-error');\n}\n\nfunction handleAddReviewSubmit() {\n  const { error, invalidInputs } = validateAllInputs();\n  if (!error) {\n    const { name, rating, comments } = getFormInputValues();\n    if ((!navigator.serviceWorker) || (!navigator.serviceWorker.controller)) {\n      // perform regular fetch and regular updates\n      const submitButton = document.getElementById('add-review-submit');\n      submitButton.setAttribute('disabled', true);\n      submitButton.setAttribute('aria-busy', 'true');\n      DBHelper.addReview(self.restaurant.id, name, rating, comments, (error, newReview) => {\n        submitButton.removeAttribute('disabled');\n        submitButton.setAttribute('aria-busy', 'false');\n        if (error) {\n          enqueueToast('An error occurred. Please try again', 'error');\n          console.log(error);\n        } else {\n          enqueueToast(`${name}'s review has been saved`, 'success');\n          const ul = document.getElementById('reviews-list');\n          ul.insertBefore(createReviewHTML(newReview), ul.firstChild);\n          closeModal();\n          clearForm();\n        }\n      });\n    } else {\n      const requestId = `${self.restaurant.id}-${Date.now()}`;\n      const newReview = {\n        name, rating, comments, restaurant_id: self.restaurant.id,\n      };\n      const ul = document.getElementById('reviews-list');\n      ul.insertBefore(createReviewHTML(newReview, true, requestId), ul.firstChild);\n\n      if (('onLine' in navigator) && !navigator.onLine) {\n        enqueueToast('Your review will be submitted when you are back online');\n      }\n\n      closeModal();\n      clearForm();\n      navigator.serviceWorker.controller.postMessage({\n        type: 'post-review',\n        review: newReview,\n        requestId,\n      });\n    }\n  } else { // form errors not cleared\n    const formError = document.getElementById('add-review-form-error');\n    const errorText = `Invalid input for: ${invalidInputs.join(', ')}`;\n    formError.innerHTML = errorText;\n    formError.classList.add('show');\n    document.getElementById(invalidInputs[0]).focus();\n  }\n}\n\nfunction handleFormSubmit(event) {\n  event.preventDefault();\n}\n"]}